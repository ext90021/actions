name: Build TDV Build Image
on:
  pull_request:
    branches: ["master"]
    paths:
      - ".github/workflows/tibco-ansible.yml"
      - "build/Dockerfile"
  workflow_dispatch:

env:
  IMAGE_NAME: ext90021/gdp-ansible
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: docker build --no-cache -t ${IMAGE_NAME}:${GITHUB_SHA} -f build/gdp-ansible .

      - name: Save Image as tar
        run: docker save -o /tmp/tibco-build.tar ${IMAGE_NAME}:${GITHUB_SHA}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: tibco-build-${GITHUB_SHA}
          path: /tmp/tibco-build.tar

  security-check:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/aquasecurity/trivy
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: tibco-build-${GITHUB_SHA}
          path: /tmp

      - name: Check for vulnerabilities
        run: trivy image --format sarif --output 'trivy-results.sarif' --no-progress --ignore-unfixed --exit-code 1 --severity CRITICAL --input /tmp/tibco-build.tar
        
      - name: Upload Trivy Image scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'image'
          
  push-image:
    needs: security-check
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: tibco-build-${GITHUB_SHA}
          path: /tmp

      - name: Load Image from tar
        run: docker image load -i /tmp/tibco-build.tar

      - name: Tag with branch/tag name
        run: docker tag ${IMAGE_NAME}:${GITHUB_SHA} ${IMAGE_NAME}:$(echo ${GITHUB_REF#refs/heads/} | tr / -)

      - name: docker login acr
        run: docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"

      - name: docker push unique image
        run: docker push $IMAGE_NAME:${GITHUB_SHA}

      - name: docker push branch/tag name
        run: docker push ${IMAGE_NAME}:$(echo ${GITHUB_REF#refs/heads/} | tr / -)
